/*
 * This file is part of Jumbo
 * Written by Roman Jámbor (c) 2017
 */

/**
 * This file is part of Jumbo framework for Node.js
 * Written by Roman Jámbor
 */

var Log = Jumbo.Logging.Log;


/**
 * Class which sync async function
 * @memberOf Jumbo.Sync
 * @example
 new Sync([
    function(done) {
		setTimeout(function() {
			console.log("First timeout");
			done();
		}, 500);
	},
    function(done) {
		setTimeout(function() {
			console.log("Second timeout");
			done("foo", "bar");
		}, 500);
	},
    function(param, par2) {
		setTimeout(function() {
			console.log("Third timeout; called with params:", param, par2);
		}, 500);
	}
 ]);
 */
class Sync {
	/**
	 * @param {Array} list List of actions
	 * @throws {Error}
	 */
	constructor(list) {
		/**
		 * Privátní parametr počítající hotové akce
		 * @private
		 */
		this.finished = -1;


		if (list.constructor !== Array) {
			throw new Error("Parameter given is not an Array");
		}

		// List of actions
		this.list = list;

		// call first action
		this.done();
	}

	/**
	 * Call next action in queue
	 * @params All arguments will be send to next action
	 */
	done() {
		this.finished++;
		if (this.finished < this.list.length) {
			var args = Array.prototype.slice.call(arguments);

			args.push(() => {
				this.done.apply(this, arguments);
			});

			this.list[this.finished].apply(null, args);
		}
	}
}

module.exports = Sync;